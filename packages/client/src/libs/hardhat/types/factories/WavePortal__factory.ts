/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WavePortal, WavePortalInterface } from "../WavePortal";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wavecount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "winOrLose",
        type: "bool",
      },
    ],
    name: "NewWave",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PER_MINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllWaves",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "waver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "wavecount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "winOrLose",
            type: "bool",
          },
        ],
        internalType: "struct WavePortal.Wave[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalWaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastWavedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_wavecount",
        type: "uint256",
      },
    ],
    name: "mintWave",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_wavecount",
        type: "uint256",
      },
    ],
    name: "wave",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526200004f6040518060400160405280601981526020017f57652068617665206265656e20636f6e737472756374656421000000000000008152506200007760201b620009901760201c565b606444426200005f9190620001c4565b6200006b919062000261565b60018190555062000308565b62000117816040516024016200008e919062000184565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200011a60201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006200015082620001a8565b6200015c8185620001b3565b93506200016e8185602086016200022b565b6200017981620002f7565b840191505092915050565b60006020820190508181036000830152620001a0818462000143565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000620001d18262000221565b9150620001de8362000221565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000216576200021562000299565b5b828201905092915050565b6000819050919050565b60005b838110156200024b5780820151818401526020810190506200022e565b838111156200025b576000848401525b50505050565b60006200026e8262000221565b91506200027b8362000221565b9250826200028e576200028d620002c8565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61176380620003186000396000f3fe6080604052600436106100705760003560e01c80639a2cdc081161004e5780639a2cdc08146100e7578063a42a466314610112578063bd43a9081461014f578063be04a5141461017a57610070565b806309d42b30146100755780635e4d0f26146100a05780638d859f3e146100bc575b600080fd5b34801561008157600080fd5b5061008a610196565b604051610097919061122e565b60405180910390f35b6100ba60048036038101906100b59190610d9d565b61019b565b005b3480156100c857600080fd5b506100d1610256565b6040516100de919061122e565b60405180910390f35b3480156100f357600080fd5b506100fc610260565b604051610109919061122e565b60405180910390f35b34801561011e57600080fd5b5061013960048036038101906101349190610d74565b610269565b604051610146919061122e565b60405180910390f35b34801561015b57600080fd5b50610164610281565b60405161017191906110c5565b60405180910390f35b610194600480360381019061018f9190610d9d565b610489565b005b600581565b6000811180156101ac575060058111155b6101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e29061120e565b60405180910390fd5b61020481655af3107a4000610a2990919063ffffffff16565b341015610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023d9061120e565b60405180910390fd5b610251838383610489565b505050565b655af3107a400081565b60008054905090565b60046020528060005260406000206000915090505481565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561048057838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610338906114ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610364906114ab565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b505050505081526020016003820180546103ca906114ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103f6906114ab565b80156104435780601f1061041857610100808354040283529160200191610443565b820191906000526020600020905b81548152906001019060200180831161042657829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff161515151581525050815260200190600101906102a5565b50505050905090565b42601e600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d69190611371565b10610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d906111ee565b60405180910390fd5b42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060008082825461056b9190611371565b925050819055506105b26040518060400160405280600d81526020017f25732068617320776176656421000000000000000000000000000000000000008152503384610a3f565b606460015442446105c39190611371565b6105cd9190611371565b6105d7919061150e565b60018190555061061e6040518060400160405280601581526020017f5261646f6d20232067656e6572617465643a2025640000000000000000000000815250600154610ade565b601e60015411610795576106676040518060400160405280600781526020017f257320776f6e210000000000000000000000000000000000000000000000000081525033610b7a565b600061068282655af3107a4000610a2990919063ffffffff16565b9050478111156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be906111ae565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516106ed906110b0565b60006040518083038185875af1925050503d806000811461072a576040519150601f19603f3d011682016040523d82523d6000602084013e61072f565b606091505b5050905080610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a906111ce565b60405180910390fd5b6001600260006101000a81548160ff02191690831515021790555050506107f0565b6107d46040518060400160405280600f81526020017f257320646964206e6f742077696e2e000000000000000000000000000000000081525033610b7a565b6000600260006101000a81548160ff0219169083151502179055505b60036040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001838152602001600260009054906101000a900460ff161515815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906108dc929190610c3f565b5060608201518160030190805190602001906108f9929190610c3f565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f8569748196031ac39917c56e931db85e4e585fbf979726046943e806e32e07e842858585600260009054906101000a900460ff16604051610983959493929190611249565b60405180910390a2505050565b610a26816040516024016109a491906110e7565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c16565b50565b60008183610a3791906113c7565b905092915050565b610ad9838383604051602401610a5793929190611139565b6040516020818303038152906040527fe0e9ad4f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c16565b505050565b610b768282604051602401610af492919061117e565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c16565b5050565b610c128282604051602401610b90929190611109565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c16565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054610c4b906114ab565b90600052602060002090601f016020900481019282610c6d5760008555610cb4565b82601f10610c8657805160ff1916838001178555610cb4565b82800160010185558215610cb4579182015b82811115610cb3578251825591602001919060010190610c98565b5b509050610cc19190610cc5565b5090565b5b80821115610cde576000816000905550600101610cc6565b5090565b6000610cf5610cf0846112cf565b6112aa565b905082815260208101848484011115610d0d57600080fd5b610d18848285611469565b509392505050565b600081359050610d2f816116ff565b92915050565b600082601f830112610d4657600080fd5b8135610d56848260208601610ce2565b91505092915050565b600081359050610d6e81611716565b92915050565b600060208284031215610d8657600080fd5b6000610d9484828501610d20565b91505092915050565b600080600060608486031215610db257600080fd5b600084013567ffffffffffffffff811115610dcc57600080fd5b610dd886828701610d35565b935050602084013567ffffffffffffffff811115610df557600080fd5b610e0186828701610d35565b9250506040610e1286828701610d5f565b9150509250925092565b6000610e288383611002565b905092915050565b610e3981611421565b82525050565b610e4881611421565b82525050565b6000610e5982611310565b610e638185611333565b935083602082028501610e7585611300565b8060005b85811015610eb15784840389528151610e928582610e1c565b9450610e9d83611326565b925060208a01995050600181019050610e79565b50829750879550505050505092915050565b610ecc81611433565b82525050565b610edb81611433565b82525050565b6000610eec8261131b565b610ef6818561134f565b9350610f06818560208601611478565b610f0f816115fb565b840191505092915050565b6000610f258261131b565b610f2f8185611360565b9350610f3f818560208601611478565b610f48816115fb565b840191505092915050565b6000610f60603483611360565b9150610f6b8261160c565b604082019050919050565b6000610f83602783611360565b9150610f8e8261165b565b604082019050919050565b6000610fa6600883611360565b9150610fb1826116aa565b602082019050919050565b6000610fc9600a83611360565b9150610fd4826116d3565b602082019050919050565b6000610fec600083611344565b9150610ff7826116fc565b600082019050919050565b600060c08301600083015161101a6000860182610e30565b50602083015161102d6020860182611092565b50604083015184820360408601526110458282610ee1565b9150506060830151848203606086015261105f8282610ee1565b91505060808301516110746080860182611092565b5060a083015161108760a0860182610ec3565b508091505092915050565b61109b8161145f565b82525050565b6110aa8161145f565b82525050565b60006110bb82610fdf565b9150819050919050565b600060208201905081810360008301526110df8184610e4e565b905092915050565b600060208201905081810360008301526111018184610f1a565b905092915050565b600060408201905081810360008301526111238185610f1a565b90506111326020830184610e3f565b9392505050565b600060608201905081810360008301526111538186610f1a565b90506111626020830185610e3f565b81810360408301526111748184610f1a565b9050949350505050565b600060408201905081810360008301526111988185610f1a565b90506111a760208301846110a1565b9392505050565b600060208201905081810360008301526111c781610f53565b9050919050565b600060208201905081810360008301526111e781610f76565b9050919050565b6000602082019050818103600083015261120781610f99565b9050919050565b6000602082019050818103600083015261122781610fbc565b9050919050565b600060208201905061124360008301846110a1565b92915050565b600060a08201905061125e60008301886110a1565b81810360208301526112708187610f1a565b905081810360408301526112848186610f1a565b905061129360608301856110a1565b6112a06080830184610ed2565b9695505050505050565b60006112b46112c5565b90506112c082826114dd565b919050565b6000604051905090565b600067ffffffffffffffff8211156112ea576112e96115cc565b5b6112f3826115fb565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061137c8261145f565b91506113878361145f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113bc576113bb61153f565b5b828201905092915050565b60006113d28261145f565b91506113dd8361145f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114165761141561153f565b5b828202905092915050565b600061142c8261143f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561149657808201518184015260208101905061147b565b838111156114a5576000848401525b50505050565b600060028204905060018216806114c357607f821691505b602082108114156114d7576114d661159d565b5b50919050565b6114e6826115fb565b810181811067ffffffffffffffff82111715611505576115046115cc565b5b80604052505050565b60006115198261145f565b91506115248361145f565b9250826115345761153361156e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f547279696e6720746f207769746864726177206d6f7265206d6f6e657920746860008201527f616e2074686520636f6e7472616374206861732e000000000000000000000000602082015250565b7f4661696c656420746f207769746864726177206d6f6e65792066726f6d20636f60008201527f6e74726163742e00000000000000000000000000000000000000000000000000602082015250565b7f5761697420333073000000000000000000000000000000000000000000000000600082015250565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b50565b61170881611421565b811461171357600080fd5b50565b61171f8161145f565b811461172a57600080fd5b5056fea26469706673582212205bce4d041751b6b1903db6f2bdf7627d90792af5eee6c05b572ded2e2a625e3364736f6c63430008040033";

export class WavePortal__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<WavePortal> {
    return super.deploy(overrides || {}) as Promise<WavePortal>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WavePortal {
    return super.attach(address) as WavePortal;
  }
  connect(signer: Signer): WavePortal__factory {
    return super.connect(signer) as WavePortal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WavePortalInterface {
    return new utils.Interface(_abi) as WavePortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WavePortal {
    return new Contract(address, _abi, signerOrProvider) as WavePortal;
  }
}
